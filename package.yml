name       : nvidia-340-glx-driver
version    : 340.104
release    : 145
source     :
    - http://us.download.nvidia.com/XFree86/Linux-x86_64/340.104/NVIDIA-Linux-x86_64-340.104.run : baf131979e3eafb65239aa1863751d5893906eeb617ce7fb37253d69fa2b66a2
extract    : no
homepage   : https://nvidia.com
license    :
    - EULA
summary    :
    - NVIDIA 340xx Binary Driver (LTS Kernel)
    - common : Shared assets for the NVIDIA 340xx GLX Driver
    - current : NVIDIA 340xx Binary Driver (Current Kernel)
    - modaliases : Files to help with DoFlicky driver detection
component  :
    - kernel.drivers
    - common : xorg.driver
    - current : kernel.drivers
    - modaliases : kernel.drivers
    - 32bit : xorg.driver
description: |
    NVIDIA Binary Driver
rundeps    :
    - common :
        - linux-driver-management
        - libva-vdpau-driver
    - 32bit :
        - nvidia-340-glx-driver-common
        - libva-vdpau-driver-32bit
    - main : nvidia-340-glx-driver-common
    - current : nvidia-340-glx-driver-common
conflicts  :
    - common :
        - nvidia-304-glx-driver-common
        - nvidia-glx-driver-common
patterns   :
    - common : /*
    - modaliases : /usr/share/doflicky/modaliases
    - 32bit : /usr/lib32
    - main : /lib/modules/*.lts
    - current : /lib/modules/*.current
strip      : no
debug      : no
builddeps  :
    - pkgconfig(xorg-server)
    - pkgconfig(gtk+-2.0)
    - pkgconfig(gtk+-3.0)
    - linux-lts
    - linux-lts-headers
    - linux-current
    - linux-current-headers
permanent  :
    - /lib/modules
setup      : |
    sh $sources/NVIDIA-Linux-x86_64-$version.run --extract-only
    pushd NVIDIA*

    # Prepare kernel trees
    cp -a kernel lts_kernel
    cp -a kernel current_kernel

    # We need systemd units.
    tar xf nvidia-persistenced-init.tar.bz2

    # Patch kernels
    pushd lts_kernel
    %patch -p1 < $pkgfiles/nv-drm.patch
    popd

    pushd current_kernel
    %patch -p1 < $pkgfiles/linux-4.11.patch
    %patch -p2 < $pkgfiles/0001-kernel-Port-nv-drm-to-4.14-APIs.patch
    popd
build      : |
    # The older NVIDIA drivers don't like -C so we pushd.

    # Build LTS kernel modules
    pushd lts_kernel
    %make SYSSRC="/lib/modules/%kernel_version_lts%/build" module
    pushd uvm
    %make SYSSRC="/lib/modules/%kernel_version_lts%/build" module
    popd; popd;

    # Build current kernel modules
    pushd current_kernel
    %make SYSSRC="/lib/modules/%kernel_version_current%/build" module
    pushd uvm
    %make SYSSRC="/lib/modules/%kernel_version_current%/build" module
install    : |
    # Install LTS kernel drivers
    install -D -d -m 00755 $installdir/lib/modules/%kernel_version_lts%/kernel/drivers/video
    install -m 00644 lts_kernel/{,uvm/}*.ko $installdir/lib/modules/%kernel_version_lts%/kernel/drivers/video/.

    # Install current kernel drivers
    install -D -d -m 00755 $installdir/lib/modules/%kernel_version_current%/kernel/drivers/video
    install -m 00644 current_kernel/{,uvm/}*.ko $installdir/lib/modules/%kernel_version_current%/kernel/drivers/video/.

    # Prepare doflicky modaliases from the LTS kernel
    sh -e $pkgfiles/nvidia_supported nvidia ${package} README.txt lts_kernel/nvidia.ko > modalias
    install -D -m 00644 modalias $installdir/usr/share/doflicky/modaliases/${package}.modaliases

    # Install nvidia driver for xorg
    install -D -m 00755 nvidia_drv.so $installdir/%libdir%/xorg/modules/drivers/nvidia_drv.so

    # Install all binaries
    install -D -d -m 00755 $installdir/usr/bin
    install -m 00755 `find . -maxdepth 1 -type f -name "nvidia-*" -executable` $installdir/usr/bin/.
    rm -v $installdir/usr/bin/nvidia-installer

    # Install all libraries
    install -D -d -m 00755 $installdir/usr/lib{32,64}
    install -m 00755 lib*.so* $installdir/%libdir%/.
    install -m 00755 tls/lib*.so* $installdir/%libdir%/.
    install -m 00755 32/lib*.so* $installdir/usr/lib32/.
    install -m 00755 32/tls/lib*.so* $installdir/usr/lib32/.

    # Strip OpenCL
    rm -v $installdir/usr/lib{32,64}/libOpenCL.so.1.0.0
    # Get weird guys in order first
    ln -sv libGLESv2.so.${version} $installdir/%libdir%/libGLESv2.so.2
    ln -sv libGLESv2.so.${version} $installdir/usr/lib32/libGLESv2.so.2

    function redo_libs() {
        for gl in $* ; do
            i=`dirname ${gl}`
            clean=`echo $(basename ${gl})|sed -e 's@\.so\.%version%@@g'`
            if [[ ! -e $i/${clean}.so.2 ]] ; then
                if [[ ! -e $i/${clean}.so.1 ]] && [[ ! -e $i/${clean}.so.0 ]] ; then
                    ln -sv `basename ${gl}` $i/${clean}.so.1
                fi
            fi
            if [[ ! -e $i/{clean}.so ]]; then
                ln -sv `basename ${gl}` $i/${clean}.so
            fi
        done
    }

    redo_libs $installdir/usr/lib64/lib*.so.%version%
    redo_libs $installdir/usr/lib32/lib*.so.%version%

    # Now move the GL providers out into glx-provider tree
    install -d -D -m 00755 $installdir/usr/lib{32,64}/glx-provider/nvidia
    mv -v $installdir/%libdir%/lib{EGL,GL,GLESv1_CM,GLESv2,glx}.so* $installdir/%libdir%/glx-provider/nvidia/.
    mv -v $installdir/usr/lib32/lib{EGL,GL,GLESv1_CM,GLESv2}.so* $installdir/usr/lib32/glx-provider/nvidia/.

    # Move vdpau into the final position
    install -D -d -m 00755 $installdir/usr/lib{32,64}/vdpau
    mv -v $installdir/%libdir%/libvdpau* $installdir/%libdir%/vdpau/.
    mv -v $installdir/usr/lib32/libvdpau* $installdir/usr/lib32/vdpau/.

    # Remove vendored libvdpau nonsense
    rm -fv $installdir/usr/lib{32,64}/vdpau/libvdpau{,_trace}.so*

    # Data files
    install -D -m 00644 nvidia-settings.desktop $installdir/usr/share/applications/nvidia-settings.desktop
    sed -e 's@__UTILS_PATH__@/usr/bin@' -e 's@__PIXMAP_PATH__@/usr/share/pixmaps@' -i $installdir/usr/share/applications/nvidia-settings.desktop
    install -D -m 00644 nvidia-settings.png $installdir/usr/share/pixmaps/nvidia-settings.png
    install -D -m 00644 nvidia.icd $installdir/usr/share/OpenCL/vendors/nvidia.icd

    # Keep settings UI happy
    install -D -d -m 00755 $installdir/usr/share/nvidia
    install -m 00644 nvidia-application-profiles-${version}-key-documentation $installdir/usr/share/nvidia/.

    # Blacklist nouveau
    install -D -d -m 00755 $installdir/usr/lib/modprobe.d
    echo "blacklist nouveau" > $installdir/usr/lib/modprobe.d/nvidia.conf

    # Init
    install -D -m 00644 nvidia-persistenced-init/systemd/nvidia-persistenced.service.template \
                           $installdir/usr/lib/systemd/system/nvidia-persistenced.service
    sed -e 's@__USER__@nvidia-persistenced@' -i $installdir/usr/lib/systemd/system/nvidia-persistenced.service

    # Additional files
    install -D -m 00644 $pkgfiles/71-nvidia.rules $installdir/%libdir%/udev/rules.d/71-nvidia.rules
    install -D -m 00644 $pkgfiles/nvidia-340-glx-driver.tmpfiles $installdir/%libdir%/tmpfiles.d/nvidia-340-glx-driver.conf
    install -D -m 00644 $pkgfiles/nvidia-340-glx-driver.sysusers $installdir/%libdir%/sysusers.d/nvidia-340-glx-driver.conf
    install -D -m 00755 $pkgfiles/create-uvm-dev-node $installdir/sbin/create-uvm-dev-node
